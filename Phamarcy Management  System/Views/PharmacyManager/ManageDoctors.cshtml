@{
    ViewData["Title"] = "Manage Doctors";
    Layout = "_Layout";
}

<div class="container" data-aos="zoom-in">
    <h2 class="dashboard-title">Doctors in SZS Pharmacy</h2>

    <div class="toolbar">
        <button class="btn btn-primary" onclick="openAddForm()">➕ Add New Doctor</button>

        <div class="search-filter" data-aos="zoom-in">
            <input type="text" id="searchInput" placeholder="Search by name/surname" class="input" onkeyup="renderDoctors()" />
            <select id="specialtyFilter" class="input" onchange="renderDoctors()">
                <option value="">Filter by Specialty</option>
                <option value="General">General</option>
                <option value="Cardiology">Cardiology</option>
                <option value="Dermatology">Dermatology</option>
            </select>
        </div>
    </div>

    <div id="doctorList" class="doctor-list" ></div>
    <div id="pagination" class="pagination" ></div>

    <!-- Doctor Details Section -->
    <div id="doctorDetails" class="details hidden">
        <h3>Doctor Details</h3>
        <div id="detailsContent" class="details-content"></div>
        <div class="button-group">
            <button onclick="openEditForm()" class="btn btn-warning">✏️ Edit Info</button>
            <button onclick="goBack()" class="btn btn-secondary">🔙 Go Back</button>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editPopup" class="modal hidden">
        <div class="modal-content" data-aos="zoom-in">
            <div class="modal-header">
                <h3>Edit Doctor</h3>
                <button onclick="closePopup()" class="close-btn">✖</button>
            </div>

            <form id="editDoctorForm" onsubmit="saveDoctorEdit(event)">
                <h5>👤 Personal Details</h5>
                <br />
                <div class="form-grid">
                    <input id="editName" class="input" placeholder="Name" required />
                    <input id="editSurname" class="input" placeholder="Surname" required />
                </div>

                <h5>📞 Contact Details</h5>
                <br />
                <div class="form-grid">
                    <input id="editContact" class="input" placeholder="Contact" required />
                    <input id="editEmail" class="input" placeholder="Email" required type="email" />
                </div>

                <h5>🏥 Organization Info</h5>
                <br />
                <div class="form-grid">
                    <input id="editPractice" class="input" placeholder="Practice Number" required />
                    <input id="editLicence" class="input" placeholder="Licence Number" />
                </div>

                <h5>🏥 Specialty Info</h5>
                <br />
                <div class="form-grid single">
                    <select id="editSpecialty" class="input" required>
                        <option value="General">General</option>
                        <option value="Cardiology">Cardiology</option>
                        <option value="Dermatology">Dermatology</option>
                    </select>
                </div>

                <div class="button-group">
                    <button type="submit" class="btn btn-success">💾 Save</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Add Doctor Modal -->
    <div id="addDoctorPopup" class="modal hidden">
        <div class="modal-content" data-aos="zoom-in">
            <div class="modal-header">
                <h3>Add New Doctor</h3>
                <button onclick="closeAddForm()" class="close-btn">✖</button>
            </div>

            <form id="doctorForm" onsubmit="submitNewDoctor(event)">
                <h5>👤 Personal Details</h5>
                <br />
                <div class="form-grid">
                    <input id="addName" class="input" required placeholder="First Name" />
                    <input id="addSurname" class="input" required placeholder="Last Name" />
                </div>

                <h5>📞 Contact Details</h5>
                <br />
                <div class="form-grid">
                    <input id="addContact" class="input" required placeholder="Cellphone" />
                    <input id="addEmail" class="input" required type="email" placeholder="Email" />
                </div>

                <h5>🏥 Organization Info</h5>
                <br />
                <div class="form-grid">
                    <input id="addPractice" class="input" required placeholder="Practice Number" />
                    <input id="addLicence" class="input" required placeholder="Licence Number" />
                </div>

                <h5>🏥 Specialty Info</h5>
                <br />
                <div class="form-grid single">
                    <select id="addSpecialty" class="input" required>
                        <option value="">Select Specialty</option>
                        <option value="General">General</option>
                        <option value="Cardiology">Cardiology</option>
                        <option value="Dermatology">Dermatology</option>
                    </select>
                </div>

                <div class="button-group">
                    <button type="submit" class="btn btn-success">💾 Submit</button>
                </div>
            </form>
        </div>
    </div>

    <style>
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

            .modal.hidden {
                display: none;
            }

        .modal-content {
            background: darkgrey;
            padding: 30px;
            border-radius: 8px;
            width: 600px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            font-family: Arial, sans-serif;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .modal-header h3 {
                margin: 0;
            }

        .close-btn {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
        }

            .close-btn:hover{
               color:darkred;
                
            }

        h5 {
            margin-top: 20px;
            font-weight: bold;
            color: #333;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 15px;
        }

            .form-grid.single {
                grid-template-columns: 1fr;
            }

        .input {
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
            font-size: 14px;
            width: 100%;
        }


            .input:invalid {
                border-color: #dc3545;
            }

        .button-group {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn {
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
        }

        .btn-success {
            background-color: #28a745;
            color: white;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
        }

        .doctor-details-card {
            display: flex;
            align-items: center; /* Align items to the center */
            gap: 10px; /* Space between image and details */
            margin: 10px 0; /* Reduced space above and below the details card */
        }

        .doctor-img {
            width: 300px; /* Set a fixed width for the image */
            height: 300px; /* Set a fixed height for the image */
            border-radius: 1%; /* Rounded corners for the image */
        }

        .doctor-info {
            display: flex; /* Use flex to align items vertically */
            flex-direction: column; /* Stack the details vertically */
            color: #333; /* Text color for details */
        }


        /*//////////////////*/

    </style>

    



</div>
@section Scripts {
    <script>
        const doctors = [
            { id: 1, name: "Ebenezer", surname: "Doe", email: "ebenezer@example.com", practiceNumber: "12345", contact: "0123456789", specialty: "General", licence: "LIC001", active: true },
            { id: 2, name: "Uju", surname: "Smith", email: "uju@example.com", practiceNumber: "67890", contact: "0987654321", specialty: "Cardiology", licence: "LIC002", active: true },
            { id: 3, name: "Yul", surname: "Grant", email: "yul@example.com", practiceNumber: "55555", contact: "0666666666", specialty: "Dermatology", licence: "LIC003", active: true },
            { id: 4, name: "Jerry", surname: "Blunt", email: "jerry@example.com", practiceNumber: "34567", contact: "0745634567", specialty: "Neurology", licence: "LIC004", active: true },
            { id: 5, name: "Gina", surname: "Wright", email: "gina@example.com", practiceNumber: "78901", contact: "0734523456", specialty: "Orthopedics", licence: "LIC005", active: true },
            { id: 6, name: "Sarah", surname: "Connor", email: "sarah@example.com", practiceNumber: "65432", contact: "0723412345", specialty: "Pediatrics", licence: "LIC006", active: true },
            { id: 7, name: "Phindile", surname: "Lee", email: "phindile@example.com", practiceNumber: "88888", contact: "0712312312", specialty: "Oncology", licence: "LIC007", active: true },
            { id: 8, name: "Sethu", surname: "Reyes", email: "sethu@example.com", practiceNumber: "99999", contact: "0767676767", specialty: "Psychiatry", licence: "LIC008", active: true },
            { id: 9, name: "Hope", surname: "Kim", email: "hope@example.com", practiceNumber: "11223", contact: "0788888888", specialty: "Radiology", licence: "LIC009", active: true }
        ];


        let currentPage = 1;
        const perPage = 4;
        let selectedDoctor = null;

        function renderDoctors() {
            const search = document.getElementById("searchInput").value.toLowerCase();
            const filter = document.getElementById("specialtyFilter").value;
            const listEl = document.getElementById("doctorList");
            const paginationEl = document.getElementById("pagination");

            const filtered = doctors.filter(d =>
                d.active &&
                (d.name.toLowerCase().includes(search) || d.surname.toLowerCase().includes(search)) &&
                (filter === "" || d.specialty === filter)
            );

               // Reset currentPage to 1 when filtering

        const start = (currentPage - 1) * perPage;
        const paged = filtered.slice(start, start + perPage);

        listEl.innerHTML = paged.map(doc => `
            <div class="doctor-card">
                <img src="/logo/User-Icon.jpg" alt="Doctor Image" />
                <p><strong style="font-size:2rem;">Dr ${doc.name} ${doc.surname}</strong></p>
                <p>${doc.email}</p>
                <button onclick="viewDoctor(${doc.id})" class="btn btn-primary">🔍 Details</button>
            </div>
        `).join("");

        paginationEl.innerHTML = "";
        // Page indicator
        const totalPages = Math.ceil(filtered.length / perPage);
        paginationEl.innerHTML += `<span style:color"darkred">Page ${currentPage} of ${totalPages || 1}</span>`;

        // Page buttons
        for (let i = 1; i <= totalPages; i++) {
            paginationEl.innerHTML += `<button onclick="goToPage(${i})" class="btn ${i === currentPage ? 'btn-primary' : 'btn-secondary'}">${i}</button>`;
        }

        }

        function goToPage(page) {
            currentPage = page;
            renderDoctors();
        }

           function viewDoctor(id) {
        selectedDoctor = doctors.find(d => d.id === id);
        const d = selectedDoctor;
        document.getElementById("doctorDetails").classList.remove("hidden");
        document.getElementById("detailsContent").innerHTML = `
            <div class="doctor-details-card">
                <img src="/logo/User-Icon.jpg" alt="Doctor Image" class="doctor-img" />
                <div class="doctor-info">
                    <p><strong>Name: </strong>Dr ${d.name} ${d.surname}</p>
                    <p><strong>Practice Number:</strong> ${d.practiceNumber}</p>
                    <p><strong>Contact:</strong> ${d.contact}</p>
                    <p><strong>Email:</strong> ${d.email}</p>
                    <p><strong>Specialty:</strong> ${d.specialty}</p>
                    <p><strong>Licence Number:</strong> ${d.licence}</p>
                </div>
            </div>
        `;

            document.getElementById("doctorList").innerHTML = "";
            document.getElementById("pagination").innerHTML = "";
        }

        function goBack() {
            selectedDoctor = null;
            document.getElementById("doctorDetails").classList.add("hidden");
            renderDoctors();
        }

        function openEditForm() {
            const d = selectedDoctor;
            document.getElementById("editName").value = d.name;
            document.getElementById("editSurname").value = d.surname;
            document.getElementById("editPractice").value = d.practiceNumber;
            document.getElementById("editContact").value = d.contact;
            document.getElementById("editEmail").value = d.email;
            document.getElementById("editSpecialty").value = d.specialty;
            document.getElementById("editLicence").value = d.licence;
            document.getElementById("editPopup").classList.remove("hidden");
        }

        function closePopup() {
            document.getElementById("editPopup").classList.add("hidden");
        }

               function saveDoctorEdit(event) {
            event.preventDefault(); // Prevent the default form submission

            const d = selectedDoctor; // Get the currently selected doctor
            d.name = document.getElementById("editName").value;
            d.surname = document.getElementById("editSurname").value;
            d.practiceNumber = document.getElementById("editPractice").value;
            d.contact = document.getElementById("editContact").value;
            d.email = document.getElementById("editEmail").value;
            d.specialty = document.getElementById("editSpecialty").value;
            d.licence = document.getElementById("editLicence").value;

            // Close the popup
            closePopup();

            // Show success message
            alert("✅ Doctor successfully updated!");

            // Display the updated doctor's details
            viewDoctor(d.id);
        }

        // Initial call to render the list
        renderDoctors();

        ////////ADDING NEW DOCTORS////////
        function openAddForm() {
                   document.getElementById("addDoctorPopup").classList.remove("hidden");
               }

               function closeAddForm() {
                   document.getElementById("addDoctorPopup").classList.add("hidden");
                   document.getElementById("doctorForm").reset();
               }

               function submitNewDoctor(event) {
                   event.preventDefault();

                   const name = document.getElementById("addName").value.trim();
                   const surname = document.getElementById("addSurname").value.trim();
                   const contact = document.getElementById("addContact").value.trim();
                   const email = document.getElementById("addEmail").value.trim();
                   const practice = document.getElementById("addPractice").value.trim();
                   const specialty = document.getElementById("addSpecialty").value.trim();
                   const licence = document.getElementById("addLicence").value.trim();

                   if (!name || !surname || !contact || !email || !practice || !specialty || !licence) {
                       alert("⚠️ All fields are required. Please fill them in.");
                       return;
                   }

                   // Add doctor
                         const newDoctor = {
                id: doctors.length + 1,
                name,
                surname,
                contact,
                email,
                practiceNumber: practice,
                specialty,
                licence,
                active: true
            };

            doctors.push(newDoctor);

            alert("✅ Doctor successfully added!");
            closeAddForm();
            renderDoctors(); // Render the updated list of doctors

            // Optionally, view the newly added doctor
            viewDoctor(newDoctor.id); // Display the details of the newly added doctor
        }

             AOS.init({
            offset: 300,
            duration: 1400
        });

    </script>
}
