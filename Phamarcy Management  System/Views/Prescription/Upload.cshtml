@model CustomerSubsystem.Models.PrescriptionUploadViewModel

@{
    ViewData["Title"] = "Upload Prescription";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}



    <!-- Title -->
    <!-- Sticky Header with Title -->
   

    <!-- Customer Info -->
<div class="max-w-5xl mx-auto space-y-8 text-center" style="margin-top: 160px;">


    <!-- Customer Info -->
    <div class="bg-white p-6 rounded shadow text-left mt-4">
        <div class="grid grid-cols-2 gap-4">
            <div>
                
                <input type="text" id="CustomerID" name="LeanaDeebb" class="w-full border border-black-300 p-2 rounded bg-gray-100 text-blue-800 font-bold" value="CUST-001" readonly />
                <p class="text-sm text-gray-500 mt-1">Customer ID</p>
            </div>
            <div>
                
                <input type="text" id="CustomerName" name="LeanaDeebb" class="w-full border border-black-300 p-2 rounded bg-gray-100 text-blue-800 font-bold" value="Leana Deebb" readonly />
                <p class="text-sm text-gray-500 mt-1">Customer Name</p>
            </div>
        </div>
    </div>



    <!-- Upload Section -->
    <div class="bg-white p-6 rounded shadow text-left">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">📤 Upload Your Prescription</h2>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="mb-4 p-3 bg-red-200 text-red-800 rounded">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }

        <div class="mb-4">
            <label for="UploadedFile" class="block font-semibold">📄 Select PDF File</label>
            <input asp-for="UploadedFile" type="file" accept=".pdf" class="w-full border p-2 rounded bg-white" onchange="previewPDF(this)" />
            <p class="text-sm text-gray-500 mt-1">Only PDF documents are supported.</p>
        </div>

        <!-- PDF Preview Container -->
        <div id="pdfPreviewContainer" class="hidden mt-6 p-4 border border-blue-300 rounded bg-blue-50">
            <p class="font-semibold text-blue-800 mb-2">📄 PDF Preview:</p>
            <iframe id="pdfPreview" width="100%" height="300px" class="rounded shadow-md border"></iframe>
        </div>

        <!-- Action Buttons -->
        <div class="mt-6 flex gap-4">
            <button type="button" onclick="addToUnprocessed()" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">
                📤 Upload
            </button>

            <button type="button" onclick="resetForm()" class="bg-gray-500 text-white px-6 py-2 rounded hover:bg-gray-600">
                ❌ Cancel
            </button>
        </div>
    </div>

    <!-- Unprocessed Scripts Table -->
    <div class="bg-white p-6 rounded shadow text-left">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-800">📋 Unprocessed Scripts</h2>
            <select class="border border-gray-300 rounded p-2 bg-white text-gray-800" onchange="sortTable('unprocessedTable', this.value)">
                <option value="desc">Sort by: 🆕 Latest</option>
                <option value="asc">Sort by: 🕰️ Earliest</option>
            </select>
        </div>

        <table class="w-full text-sm text-left border border-gray-300">
            <thead class="bg-gray-400 text-white">
                <tr>
                    <th class="p-2">🗓️ Date</th>
                    <th class="p-2">📄 File</th>
                    <th class="p-2">Dispense</th>
                    <th class="p-2">Actions</th>
                </tr>
            </thead>
            <tbody id="unprocessedTable" class="bg-white text-gray-800"></tbody>
        </table>
    </div>

    <!-- Processed Scripts Table -->
    <div class="bg-white p-6 rounded shadow text-left">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-800">✅ Processed Scripts</h2>
            <select class="border border-gray-300 rounded p-2 bg-white text-gray-800" onchange="sortTable('processedTable', this.value)">
                <option value="desc">Sort by: 🆕 Latest</option>
                <option value="asc">Sort by: 🕰️ Earliest</option>
            </select>
        </div>

        <table class="w-full text-sm text-left border border-gray-300">
            <thead class="bg-gray-400 text-white">
                <tr>
                    <th class="p-2">🗓️ Date</th>
                    <th class="p-2">👨‍⚕️ Doctor</th>
                    <th class="p-2">Prescription</th>
                </tr>
            </thead>
            <tbody id="processedTable" class="bg-white text-gray-800">
                <tr class="even:bg-gray-50">
                    <td class="p-2">2025-05-19</td>
                    <td class="p-2">Dr. Smith</td>
                    <td class="p-2">
                        <a href="#" onclick="alert('Opening prescription PDF...')" class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700">📄 View</a>
                    </td>
                </tr>
                <tr class="even:bg-gray-50">
                    <td class="p-2">2025-05-18</td>
                    <td class="p-2">Dr. Taylor</td>
                    <td class="p-2">
                        <a href="#" onclick="alert('Opening prescription PDF...')" class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700">📄 View</a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
<script>
    function previewPDF(input) {
        const file = input.files[0];
        const previewContainer = document.getElementById("pdfPreviewContainer");
        const preview = document.getElementById("pdfPreview");

        if (file && file.type === "application/pdf") {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                previewContainer.classList.remove("hidden");
            };
            reader.readAsDataURL(file);
        } else {
            preview.src = "";
            previewContainer.classList.add("hidden");
        }
    }

    function resetForm() {
        document.getElementById("CustomerID").value = "";
        document.getElementById("CustomerName").value = "";
        document.querySelector("input[type='file']").value = "";
        document.getElementById("pdfPreview").src = "";
        document.getElementById("pdfPreviewContainer").classList.add("hidden");
    }

        function addToUnprocessed() {
            const fileInput = document.querySelector("input[type='file']");
            const file = fileInput.files[0];

            if (!file || file.type !== "application/pdf") {
                alert("Please select a valid PDF file first.");
                return;
            }

            const fileName = file.name;
            const table = document.getElementById("unprocessedTable");
            const newRow = table.insertRow(0);
            const today = new Date().toISOString().split('T')[0];

            newRow.innerHTML = `
                <td class="p-2">${today}</td>
                <td class="p-2"><a href="#" class="text-blue-600 hover:underline">${fileName}</a></td>
                <td class="p-2">
                    <select class="dispense-select border border-gray-300 p-1 rounded">
                        <option value="">Select</option>
                        <option value="Yes">✅ Yes</option>
                        <option value="No">❌ No</option>
                    </select>
                </td>
                <td class="p-2 space-x-2">
                    <button class="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded" onclick="alert('Editing script...')">🖊️ Edit</button>
                    <button class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded" onclick="confirmDelete(this)">🗑️ Remove</button>
                </td>
            `;

            // Close preview after upload
            fileInput.value = "";
            document.getElementById("pdfPreview").src = "";
            document.getElementById("pdfPreviewContainer").classList.add("hidden");
        }

    function selectDispense(button, value) {
        const cell = button.closest('td');
        const buttons = cell.querySelectorAll("button");
        buttons.forEach(btn => btn.classList.remove("bg-green-500", "bg-red-500", "text-white"));

        if (value === "Yes") {
            button.classList.add("bg-green-500", "text-white");
        } else {
            button.classList.add("bg-red-500", "text-white");
        }
    }

    function confirmDelete(button) {
        if (confirm("Are you sure you want to delete this prescription?")) {
            const row = button.closest("tr");
            row.remove();
        }
    }

    function sortTable(tableId, order) {
        const table = document.getElementById(tableId);
        const rows = Array.from(table.rows);

        rows.sort((a, b) => {
            const dateA = new Date(a.cells[0].innerText);
            const dateB = new Date(b.cells[0].innerText);
            return order === "asc" ? dateA - dateB : dateB - dateA;
        });

        rows.forEach(row => table.appendChild(row));
    }
</script>
}
